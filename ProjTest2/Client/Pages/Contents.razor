@page "/contents"
@using ProjTest2.Shared.DTOs
@using ProjTest2.Shared.Models
@using Microsoft.EntityFrameworkCore
@using System.Linq;
@using System.Diagnostics

@inject HttpClient Http


<PageTitle>content</PageTitle>
<h3>Content</h3>
<p>This component fetches content from the server's database using a REST API.</p>

@if (content == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Title</th>
                <th>Desc.</th>
                <th>Difficulty</th>
                <th>Language</th>
                <th>Rating</th>
                <th>Type</th>
                <th>Extra</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var c in content)
            {
                <tr>
                    <td>@c.Title</td>
                    <td>@c.Description</td>
                    <td>@c.Difficulty</td>
                    <td>@c.ProgrammingLanguages</td>
                    <td>@c.AvgRating</td>
                    <td>@c.Type</td>
                    <td>
                        <button>@(c.Type == "Article" ? "Læs artikel" : "Se video")</button>                        
                    </td>
                </tr>
            }
        </tbody>
    </table>
    @* *@
    @* <EditForm> *@
    @* *@
    @* </EditForm> *@
}

@code {
    private ContentDetailsDTO[]? content;

    protected override async Task OnInitializedAsync()
    {
        // Det der Article[] skal måske ændres?? men det virker ikke med Content.
        // Jeg tror det er fordi Content er en abstrakt klasse
        //Har ændret det til ContentDetailsDTO, samme klasse som bliver sendt afsted
        content = await Http.GetFromJsonAsync<ContentDetailsDTO[]>("api/Content");
    }

    private static void alertDescription()
    {
        Console.WriteLine("HEJ");

    }
}
