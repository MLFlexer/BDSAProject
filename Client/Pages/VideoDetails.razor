@page "/VideoDetails/{videoId:int}"
@inject HttpClient Http
@inject NavigationManager NavigationManager
@using SETraining.Shared.DTOs

<div style="position:relative">

<RadzenButton style="right:0px; position: absolute;" Click=@(() => Back()) Text="Go Back" ButtonStyle="ButtonStyle.Secondary" />
   

@if (video != null)
{
    <div>
        <h1 class="mb-0">@(video.Title)</h1>
        <div>
            Video
        </div>
        <div style="font-size: .8em">@video.Description</div>
        <div class="col-md-8 text-truncate" style="margin-top: 10px">
            @foreach (var l in video.ProgrammingLanguages)
            {
                <RadzenBadge BadgeStyle="BadgeStyle.Secondary" Text=@($"{String.Format(new System.Globalization.CultureInfo("en-US"), "{0:C}", l)}")/>
            }
            
            @if (video.Difficulty != null)
            {
                <RadzenBadge BadgeStyle="BadgeStyle.Light" Text=@($"{String.Format(new System.Globalization.CultureInfo("en-US"), "{0:C}", video.Difficulty.Value.ToString())}")/>
            }                     
        </div>
    </div>   
    
     <div style="background: white; width: 100%; height: 500px; margin-top: 10px">
        @((MarkupString) video.Path)
    </div>

}
</div>


@code {
    [Parameter]
    public int? VideoId { get; set; }

    private VideoDTO? video;

    protected override async Task OnParametersSetAsync()
    {
        if (VideoId != 0)
        {
            video = await Http.GetFromJsonAsync<VideoDTO>($"api/Video/id={VideoId}");
        }

        await base.OnParametersSetAsync();
    }
    private void Back()
    {
        var uri = $"{NavigationManager.BaseUri}";

        NavigationManager.NavigateTo(uri);
    }
}