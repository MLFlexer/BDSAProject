<p class="MsoNormal" style="margin: 24pt 0cm 0.0001pt; font-size: medium; caret-color: rgb(0, 0, 0); color: rgb(0, 0, 0); line-height: 24pt;"><span lang="EN-US" style="color: rgb(41, 41, 41); letter-spacing: -0.05pt; font-family: Helvetica;">Hello folks, Java is changing rapidly and it has changed a lot in the last 2 to 3 years. Now there is a new release every six months and it’s hard to keep up-to-speed with new Java features. So what should a Java programmer do to keep himself up-to-date and without missing key features?<o:p></o:p></span></p><p class="MsoNormal" style="margin: 24pt 0cm 0.0001pt; font-size: medium; caret-color: rgb(0, 0, 0); color: rgb(0, 0, 0); line-height: 24pt;"><span lang="EN-US" style="color: rgb(41, 41, 41); letter-spacing: -0.05pt; font-family: Helvetica;">Well, instead of learning all-new feature you can focus on some of the key Java features which make development easier and has the potential to improve code quality.<o:p></o:p></span></p><p class="MsoNormal" style="margin: 24pt 0cm 0.0001pt; font-size: medium; caret-color: rgb(0, 0, 0); color: rgb(0, 0, 0); line-height: 24pt;"><span lang="EN-US" style="color: rgb(41, 41, 41); letter-spacing: -0.05pt; font-family: Helvetica;">I haven’t got a chance to learn most of the Java features since Java 10, so I decided to sit down and take note of the most important Java features and that’s what I am going to share in this article.<o:p></o:p></span></p><p class="MsoNormal" style="margin: 24pt 0cm 0.0001pt; font-size: medium; caret-color: rgb(0, 0, 0); color: rgb(0, 0, 0); line-height: 24pt;"><span lang="EN-US" style="color: rgb(41, 41, 41); letter-spacing: -0.05pt; font-family: Helvetica;">In this article, you will learn about&nbsp;<b>7 new Java features since Java 8 release</b>, this includes Java features like&nbsp;<i>var&nbsp;</i>from Java 10,&nbsp;<i>Modules&nbsp;</i>from Java 9,&nbsp;<i>Sealed Classes</i>&nbsp;from Java 15,&nbsp;<i>Records&nbsp;</i>from Java 14,&nbsp;<i>Text Blocks</i>&nbsp;from Java 15, and&nbsp;<i>Switch Expression</i>&nbsp;from Java 12.<o:p></o:p></span></p><p class="MsoNormal" style="margin: 24pt 0cm 0.0001pt; font-size: medium; caret-color: rgb(0, 0, 0); color: rgb(0, 0, 0); line-height: 24pt;"><span style="font-family: Helvetica;"><span lang="EN-US" style="color: rgb(41, 41, 41); letter-spacing: -0.05pt;">These are the Java features that will not only help you to write better code but also be worth knowing from a&nbsp;</span><span style="color: rgb(41, 41, 41); letter-spacing: -0.05pt;"><a href="https://www.java67.com/2018/03/top-50-core-java-interview-questions.html" target="_blank" style="color: rgb(149, 79, 114); text-decoration: underline;"><span lang="EN-US">Java interview</span></a></span><span lang="EN-US" style="color: rgb(41, 41, 41); letter-spacing: -0.05pt;">&nbsp;point of view and that’s why I think every Java developer should learn in 2022.<o:p></o:p></span></span></p><p class="MsoNormal" style="margin: 24pt 0cm 0.0001pt; font-size: medium; caret-color: rgb(0, 0, 0); color: rgb(0, 0, 0); line-height: 24pt;"><span style="font-family: Helvetica;"><span lang="EN-US" style="color: rgb(41, 41, 41); letter-spacing: -0.05pt;">Before learning these Java features in detail, let’s try to get a glimpse of what they are and how they help Java developers.&nbsp;</span><span style="color: rgb(41, 41, 41); letter-spacing: -0.05pt;"><a href="https://javarevisited.blogspot.com/2018/02/top-5-java-9-courses-to-learn-online.html" target="_blank" style="color: rgb(149, 79, 114); text-decoration: underline;"><b><span lang="EN-US">Modules</span></b></a></span><span lang="EN-US" style="color: rgb(41, 41, 41); letter-spacing: -0.05pt;">&nbsp;made your Java application smaller and faster by reducing unwanted packages. You are allowed to include what you really need.<o:p></o:p></span></span></p><p class="MsoNormal" style="margin: 24pt 0cm 0.0001pt; font-size: medium; caret-color: rgb(0, 0, 0); color: rgb(0, 0, 0); line-height: 24pt;"><span style="font-family: Helvetica;"><span lang="EN-US" style="color: rgb(41, 41, 41); letter-spacing: -0.05pt;">Then&nbsp;</span><span style="color: rgb(41, 41, 41); letter-spacing: -0.05pt;"><a href="https://javarevisited.blogspot.com/2018/03/finally-java-10-has-var-to-declare-local-variables.html" target="_blank" style="color: rgb(149, 79, 114); text-decoration: underline;"><b><span lang="EN-US">var</span></b></a></span><b><span lang="EN-US" style="color: rgb(41, 41, 41); letter-spacing: -0.05pt;">&nbsp;</span></b><span lang="EN-US" style="color: rgb(41, 41, 41); letter-spacing: -0.05pt;">comes which makes it easier to declare local variables like&nbsp;</span><span style="color: rgb(41, 41, 41); letter-spacing: -0.05pt;"><a href="https://www.java67.com/2020/10/best-javascript-courses-for.html" target="_blank" style="color: rgb(149, 79, 114); text-decoration: underline;"><span lang="EN-US">Javascript</span></a></span><span lang="EN-US" style="color: rgb(41, 41, 41); letter-spacing: -0.05pt;">&nbsp;and other programming languages.<o:p></o:p></span></span></p><p class="MsoNormal" style="margin: 24pt 0cm 0.0001pt; font-size: medium; caret-color: rgb(0, 0, 0); color: rgb(0, 0, 0); line-height: 24pt;"><span style="font-family: Helvetica;"><b><span lang="EN-US" style="color: rgb(41, 41, 41); letter-spacing: -0.05pt;">Switch expression</span></b><span lang="EN-US" style="color: rgb(41, 41, 41); letter-spacing: -0.05pt;">&nbsp;made the branching easier and improve the readability aspect of code. You can now write expressions, combine multiple cases to produce a single result, and much more. You will see in the example how clear and concise new switch statements are.<o:p></o:p></span></span></p><p class="MsoNormal" style="margin: 24pt 0cm 0.0001pt; font-size: medium; caret-color: rgb(0, 0, 0); color: rgb(0, 0, 0); line-height: 24pt;"><span lang="EN-US" style="color: rgb(41, 41, 41); letter-spacing: -0.05pt; font-family: Helvetica;">Sames goes to&nbsp;<b>Text Block</b>&nbsp;which ended the pain of escaping string for multiple lines. Now, it’s much easier to produce multiple line output from a Java program.<o:p></o:p></span></p><p class="MsoNormal" style="margin: 24pt 0cm 0.0001pt; font-size: medium; caret-color: rgb(0, 0, 0); color: rgb(0, 0, 0); line-height: 24pt;"><span style="font-family: Helvetica;"><b><span lang="EN-US" style="color: rgb(41, 41, 41); letter-spacing: -0.05pt;">Records</span></b><span lang="EN-US" style="color: rgb(41, 41, 41); letter-spacing: -0.05pt;">&nbsp;of Java 14 is a game-changer, it allows you specific immutable data structure without any clutter. Now, you don’t need to define equals(), hashCode(), toString(), and constructor for your Java classes, just declare them Record and Java will take care of it. This makes declaring Domain objects really easy.<o:p></o:p></span></span></p><p class="MsoNormal" style="margin: 24pt 0cm 0.0001pt; font-size: medium; caret-color: rgb(0, 0, 0); color: rgb(0, 0, 0); line-height: 24pt;"><span lang="EN-US" style="color: rgb(41, 41, 41); letter-spacing: -0.05pt; font-family: Helvetica;">Now, coming to&nbsp;<b>Sealed classes</b>&nbsp;as the name suggests they allow you to seal your class and interface so that only permitted classes can extend it or which interface can implement it. This is a nice feature for data modeling and improves the security of your libraries.<o:p></o:p></span></p><p class="MsoNormal" style="margin: 23.4pt 0cm 0.0001pt; font-size: medium; caret-color: rgb(0, 0, 0); color: rgb(0, 0, 0); line-height: 27pt;"><span lang="EN-US" style="color: rgb(41, 41, 41); font-family: Helvetica;">7 New Java Features Every Java Developer should learn in 2022<o:p></o:p></span></p><p class="MsoNormal" style="margin: 10.3pt 0cm 0.0001pt; font-size: medium; caret-color: rgb(0, 0, 0); color: rgb(0, 0, 0); line-height: 24pt;"><span lang="EN-US" style="color: rgb(41, 41, 41); letter-spacing: -0.05pt; font-family: Helvetica;">Java is one of the most popular programming languages. It has maintained itself as one of the top languages since its inception in the 90s. Today, Java is used in several domains. It is used in developing web-based applications, mobile applications, desktop GUI applications, and more.<o:p></o:p></span></p><p class="MsoNormal" style="margin: 24pt 0cm 0.0001pt; font-size: medium; caret-color: rgb(0, 0, 0); color: rgb(0, 0, 0); line-height: 24pt;"><span lang="EN-US" style="color: rgb(41, 41, 41); letter-spacing: -0.05pt; font-family: Helvetica;">Java is a regularly updated programming language. New features are added regularly and outdated ones are removed, replaced, or updated. Java developers must keep up with the new changes.&nbsp;<br><br>In this article, we will discuss the top 5 new Java features and two old but important Java features to learn, as shown below:<o:p></o:p></span></p><p class="MsoNormal" style="margin: 24pt 0cm 0.0001pt; font-size: medium; caret-color: rgb(0, 0, 0); color: rgb(0, 0, 0); line-height: 24pt;"><span lang="EN-US" style="color: rgb(41, 41, 41); letter-spacing: -0.05pt; font-family: Helvetica;"><o:p>&nbsp;</o:p></span></p><h2 style="margin: 20.65pt 0cm 0.0001pt; break-after: avoid; color: rgb(47, 84, 150); font-weight: normal; letter-spacing: normal; line-height: 21pt;"><span style="font-family: Helvetica;"><b><span lang="EN-US" style="color: rgb(41, 41, 41); font-size: large;">1. Modules</span></b><span lang="EN-US" style="font-size: 12pt; color: rgb(41, 41, 41);"><o:p></o:p></span></span></h2><p class="ry" id="48c6" data-selectable-paragraph="" style="margin: 10.3pt 0cm 0.0001pt; font-size: medium; caret-color: rgb(0, 0, 0); color: rgb(0, 0, 0); line-height: 24pt; box-sizing: inherit; word-break: break-word;"><span lang="EN-US" style="color: rgb(41, 41, 41); letter-spacing: -0.05pt; font-family: Helvetica;">Java module is a new feature added with Java 9. It is a mechanism, using which you can package a Java app or API as a Java module. It is available as a modular JAR file. A module can contain one or more packages.<o:p></o:p></span></p><p class="ry" id="ecfa" data-selectable-paragraph="" style="margin: 24pt 0cm 0.0001pt; font-size: medium; caret-color: rgb(0, 0, 0); color: rgb(0, 0, 0); line-height: 24pt; box-sizing: inherit; word-break: break-word;"><span lang="EN-US" style="color: rgb(41, 41, 41); letter-spacing: -0.05pt; font-family: Helvetica;">This feature allowed the Java designer to split the big JDK into smaller modules which means now your application has a much lower memory footprint and you can run on devices with lower memory.<span class="apple-converted-space">&nbsp;</span><br style="box-sizing: inherit;"><br style="box-sizing: inherit;">Before setting up a module, we need to put<span class="apple-converted-space">&nbsp;</span><code style="box-sizing: inherit;"><span style="background-color: rgb(242, 242, 242);">“module-info.java”</span></code><span class="apple-converted-space"><span style="background-color: rgb(242, 242, 242);">&nbsp;</span></span>at the root of the packages. This file is known as the module descriptor. It has all the information required to build or to be used in the module.<span class="apple-converted-space">&nbsp;</span><o:p></o:p></span></p><h2 style="margin: 20.65pt 0cm 0.0001pt; break-after: avoid; color: rgb(47, 84, 150); font-weight: normal; letter-spacing: normal; line-height: 21pt;"><span style="font-family: Helvetica;"><b><span lang="EN-US" style="color: rgb(41, 41, 41); font-size: large;">2. Records</span></b><span lang="EN-US" style="font-size: 12pt; color: rgb(41, 41, 41);"><o:p></o:p></span></span></h2><p class="ry" id="971c" data-selectable-paragraph="" style="margin: 10.3pt 0cm 0.0001pt; font-size: medium; caret-color: rgb(0, 0, 0); color: rgb(0, 0, 0); line-height: 24pt; box-sizing: inherit; word-break: break-word;"><span style="font-family: Helvetica;"><span lang="EN-US" style="color: rgb(41, 41, 41); letter-spacing: -0.05pt;">Record in Java is a special kind of class that has a concise syntax. It is used for defining immutable data-only classes. Moreover, the Java record class is useful for holding records returned from a remote service call and database query, records read from<span class="apple-converted-space">&nbsp;</span></span><span style="color: rgb(41, 41, 41); letter-spacing: -0.05pt;"><a href="https://www.java67.com/2019/05/how-to-read-csv-file-in-java-using-jackson-library.html" target="_blank" style="color: inherit; text-decoration: underline; box-sizing: inherit;"><span lang="EN-US">CSV files</span></a></span><span lang="EN-US" style="color: rgb(41, 41, 41); letter-spacing: -0.05pt;">, and for similar other use cases.<span class="apple-converted-space">&nbsp;</span><br style="box-sizing: inherit;"><br style="box-sizing: inherit;">Following is the syntax of the Java record class.<o:p></o:p></span></span></p><pre style="margin: 0cm 0cm 0.0001pt; font-size: 10pt; background-color: rgb(242, 242, 242); box-sizing: inherit; caret-color: rgba(0, 0, 0, 0.8); color: rgba(0, 0, 0, 0.8);"><span style="font-family: Helvetica;"><span data-selectable-paragraph="" id="133a" style="box-sizing: inherit; white-space: pre-wrap;"><strong style="box-sizing: inherit;"><span lang="EN-US" style="font-size: 12pt; color: rgb(41, 41, 41); letter-spacing: -0.25pt;">public</span></strong><span class="bc"><span lang="EN-US" style="font-size: 12pt; color: rgb(41, 41, 41); letter-spacing: -0.25pt;"> record </span></span><strong style="box-sizing: inherit;"><span lang="EN-US" style="font-size: 12pt; color: rgb(41, 41, 41); letter-spacing: -0.25pt;">demo</span></strong><span class="bc"><span lang="EN-US" style="font-size: 12pt; color: rgb(41, 41, 41); letter-spacing: -0.25pt;">(</span></span><strong style="box-sizing: inherit;"><span lang="EN-US" style="font-size: 12pt; color: rgb(41, 41, 41); letter-spacing: -0.25pt;">int</span></strong><span class="bc"><span lang="EN-US" style="font-size: 12pt; color: rgb(41, 41, 41); letter-spacing: -0.25pt;"> arg1, </span></span><strong style="box-sizing: inherit;"><span lang="EN-US" style="font-size: 12pt; color: rgb(41, 41, 41); letter-spacing: -0.25pt;">int</span></strong><span class="bc"><span lang="EN-US" style="font-size: 12pt; color: rgb(41, 41, 41); letter-spacing: -0.25pt;"> arg2) { </span></span><span lang="EN-US" style="font-size: 12pt; color: rgb(41, 41, 41); letter-spacing: -0.25pt;"><br style="box-sizing: inherit;"> <span class="bc">&nbsp;&nbsp; //functional code</span><br style="box-sizing: inherit;"> <span class="bc">}</span></span></span><span lang="EN-US" style="font-size: 12pt;"><o:p></o:p></span></span></pre><p class="ry" id="1765" data-selectable-paragraph="" style="margin: 24pt 0cm 0.0001pt; font-size: medium; caret-color: rgb(0, 0, 0); color: rgb(0, 0, 0); line-height: 24pt; box-sizing: inherit; word-break: break-word;"><span lang="EN-US" style="color: rgb(41, 41, 41); letter-spacing: -0.05pt; font-family: Helvetica;">Record is a seriously useful feature, it’s not just saves typing but also provides a robust mechanism to declare immutable data structure. I highly recommend you to use Record if your object just has a bunch of fields to manage the state.<o:p></o:p></span></p><p class="ry" id="8346" data-selectable-paragraph="" style="margin: 24pt 0cm 0.0001pt; font-size: medium; caret-color: rgb(0, 0, 0); color: rgb(0, 0, 0); line-height: 24pt; box-sizing: inherit; word-break: break-word;"><span style="font-family: Helvetica;"><span lang="EN-US" style="color: rgb(41, 41, 41); letter-spacing: -0.05pt;">And if you want to learn more about Records and other new Java features, you can also check out<span class="apple-converted-space">&nbsp;</span></span><span style="color: rgb(41, 41, 41); letter-spacing: -0.05pt;"><a href="https://click.linksynergy.com/deeplink?id=CuIbQrBnhiw&amp;mid=39197&amp;murl=https%3A%2F%2Fwww.udemy.com%2Fcourse%2Fjava-programming-tutorial-for-beginners%2F" target="_blank" style="color: inherit; text-decoration: underline; box-sizing: inherit;"><strong style="box-sizing: inherit;"><span lang="EN-US">Java Programming for Complete Beginners</span></strong></a></span><span lang="EN-US" style="color: rgb(41, 41, 41); letter-spacing: -0.05pt;">course by Ranga Karnam, one of the best Java instructors on Udemy.<o:p></o:p></span></span></p><h2 style="margin: 20.65pt 0cm 0.0001pt; break-after: avoid; color: rgb(47, 84, 150); font-weight: normal; letter-spacing: normal; line-height: 21pt;"><span style="font-family: Helvetica; font-size: large;"><b><span lang="EN-US" style="color: rgb(41, 41, 41);">3. var keyword</span></b><span lang="EN-US" style="color: rgb(41, 41, 41);"><o:p></o:p></span></span></h2><p class="ry" id="8afb" data-selectable-paragraph="" style="margin: 10.3pt 0cm 0.0001pt; font-size: medium; caret-color: rgb(0, 0, 0); color: rgb(0, 0, 0); line-height: 24pt; box-sizing: inherit; word-break: break-word;"><span style="font-family: Helvetica;"><span lang="EN-US" style="color: rgb(41, 41, 41); letter-spacing: -0.05pt;">Introduced in Java 10, the<span class="apple-converted-space">&nbsp;</span></span><span style="color: rgb(41, 41, 41); letter-spacing: -0.05pt;"><a href="https://javarevisited.blogspot.com/2018/03/finally-java-10-has-var-to-declare-local-variables.html" target="_blank" style="color: inherit; text-decoration: underline; box-sizing: inherit;"><span lang="EN-US">var keyword<span class="apple-converted-space">&nbsp;</span></span></a></span><span lang="EN-US" style="color: rgb(41, 41, 41); letter-spacing: -0.05pt;">is one of the most useful new features of Java. Earlier in Java, while declaring a variable, we had to specify the data type of the variable. Such a variable can hold only those values that match the data type. But variables declared using the var keyword can hold the value of any data type. There is no need to specify the data type.<o:p></o:p></span></span></p><h2 style="margin: 20.65pt 0cm 0.0001pt; break-after: avoid; color: rgb(47, 84, 150); font-weight: normal; letter-spacing: normal; line-height: 21pt;"><span style="font-family: Helvetica; font-size: large;"><b><span lang="EN-US" style="color: rgb(41, 41, 41);">4. Text block</span></b><span lang="EN-US" style="color: rgb(41, 41, 41);"><o:p></o:p></span></span></h2><p class="ry" id="3660" data-selectable-paragraph="" style="margin: 10.3pt 0cm 0.0001pt; font-size: medium; caret-color: rgb(0, 0, 0); color: rgb(0, 0, 0); line-height: 24pt; box-sizing: inherit; word-break: break-word;"><span lang="EN-US" style="color: rgb(41, 41, 41); letter-spacing: -0.05pt; font-family: Helvetica;">Text block is another useful new feature of Java. A multi-line string is a block of text, that spans across multiple lines. We have to use the line separator for this.<span class="apple-converted-space">&nbsp;</span><br style="box-sizing: inherit;"><br><o:p></o:p></span></p><h1 style="margin: 15pt 0cm 0.0001pt; caret-color: rgb(0, 0, 0); color: rgb(0, 0, 0); letter-spacing: normal; line-height: 27pt;"><span lang="EN-US" style="color: rgb(41, 41, 41); font-family: Helvetica; font-size: large;">5. Sealed classes<o:p></o:p></span></h1><p class="ry" id="39bb" data-selectable-paragraph="" style="margin: 10.3pt 0cm 0.0001pt; font-size: medium; caret-color: rgb(0, 0, 0); color: rgb(0, 0, 0); line-height: 24pt; box-sizing: inherit; word-break: break-word;"><span lang="EN-US" style="color: rgb(41, 41, 41); letter-spacing: -0.05pt; font-family: Helvetica;">The sealed class feature will give us more control over inheritance in Java. In simple words, we can now define which classes can implement or extend a class or interface.<span class="apple-converted-space">&nbsp;</span><br style="box-sizing: inherit;"><br style="box-sizing: inherit;">Following is an example of a sealed class in Java.<o:p></o:p></span></p><p class="ry" style="margin: 10.3pt 0cm 0.0001pt; font-size: medium; caret-color: rgb(0, 0, 0); color: rgb(0, 0, 0); line-height: 24pt;"><span lang="EN-US" style="color: rgb(41, 41, 41); letter-spacing: -0.05pt; font-family: Helvetica;"><o:p>&nbsp;</o:p></span></p><h1 style="margin: 15pt 0cm 0.0001pt; caret-color: rgb(0, 0, 0); color: rgb(0, 0, 0); letter-spacing: normal; line-height: 27pt;"><span lang="EN-US" style="color: rgb(41, 41, 41); font-family: Helvetica; font-size: large;">6. var-args<o:p></o:p></span></h1><p class="ry" id="dab3" data-selectable-paragraph="" style="margin: 10.3pt 0cm 0.0001pt; font-size: medium; caret-color: rgb(0, 0, 0); color: rgb(0, 0, 0); line-height: 24pt; box-sizing: inherit; word-break: break-word;"><span lang="EN-US" style="color: rgb(41, 41, 41); letter-spacing: -0.05pt; font-family: Helvetica;">var-args is a popular and commonly used new feature of Java. It is the short form for variable arguments.<o:p></o:p></span></p><p class="ry" id="1ca4" data-selectable-paragraph="" style="margin: 24pt 0cm 0.0001pt; font-size: medium; caret-color: rgb(0, 0, 0); color: rgb(0, 0, 0); line-height: 24pt; box-sizing: inherit; word-break: break-word;"><span lang="EN-US" style="color: rgb(41, 41, 41); letter-spacing: -0.05pt; font-family: Helvetica;">A varargs method is a method that takes a variable number of arguments. By this it means, the number of arguments of a particular method is not defined. It can have a single argument or multiple arguments.<o:p></o:p></span></p><p class="ry" id="f437" data-selectable-paragraph="" style="margin: 24pt 0cm 0.0001pt; font-size: medium; caret-color: rgb(0, 0, 0); color: rgb(0, 0, 0); line-height: 24pt; box-sizing: inherit; word-break: break-word;"><span lang="EN-US" style="color: rgb(41, 41, 41); letter-spacing: -0.05pt; font-family: Helvetica;">Earlier, there were two ways of handling a method with variable arguments — using the overloaded method and putting arguments in an array. But the var-args is a simple and efficient way of handling variable arguments<o:p></o:p></span></p><p class="ry" style="margin: 10.3pt 0cm 0.0001pt; font-size: medium; caret-color: rgb(0, 0, 0); color: rgb(0, 0, 0); line-height: 24pt;"><span lang="EN-US" style="color: rgb(41, 41, 41); letter-spacing: -0.05pt; font-family: Helvetica;"><o:p>&nbsp;</o:p></span></p><p class="MsoNormal" style="margin: 24pt 0cm 0.0001pt; font-size: medium; caret-color: rgb(0, 0, 0); color: rgb(0, 0, 0); line-height: 24pt;"><span lang="EN-US" style="color: rgb(41, 41, 41); letter-spacing: -0.05pt; font-family: Helvetica;"><o:p>&nbsp;</o:p></span></p><p class="MsoNormal" style="margin: 0cm 0cm 0.0001pt; font-size: medium; caret-color: rgb(0, 0, 0); color: rgb(0, 0, 0);"><span lang="EN-US" style="font-family: Helvetica;"><o:p>&nbsp;</o:p></span></p>